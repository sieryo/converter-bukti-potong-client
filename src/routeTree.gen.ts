/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ConvertIndexRouteImport } from './routes/convert/index'
import { Route as ProfileNewRouteImport } from './routes/profile/new'
import { Route as DemoFormSimpleRouteImport } from './routes/demo.form.simple'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ConvertIndexRoute = ConvertIndexRouteImport.update({
  id: '/convert/',
  path: '/convert/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileNewRoute = ProfileNewRouteImport.update({
  id: '/profile/new',
  path: '/profile/new',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoFormSimpleRoute = DemoFormSimpleRouteImport.update({
  id: '/demo/form/simple',
  path: '/demo/form/simple',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/profile/new': typeof ProfileNewRoute
  '/convert': typeof ConvertIndexRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/profile/new': typeof ProfileNewRoute
  '/convert': typeof ConvertIndexRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/profile/new': typeof ProfileNewRoute
  '/convert/': typeof ConvertIndexRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/profile/new' | '/convert' | '/demo/form/simple'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/profile/new' | '/convert' | '/demo/form/simple'
  id: '__root__' | '/' | '/profile/new' | '/convert/' | '/demo/form/simple'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProfileNewRoute: typeof ProfileNewRoute
  ConvertIndexRoute: typeof ConvertIndexRoute
  DemoFormSimpleRoute: typeof DemoFormSimpleRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/convert/': {
      id: '/convert/'
      path: '/convert'
      fullPath: '/convert'
      preLoaderRoute: typeof ConvertIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile/new': {
      id: '/profile/new'
      path: '/profile/new'
      fullPath: '/profile/new'
      preLoaderRoute: typeof ProfileNewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/form/simple': {
      id: '/demo/form/simple'
      path: '/demo/form/simple'
      fullPath: '/demo/form/simple'
      preLoaderRoute: typeof DemoFormSimpleRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProfileNewRoute: ProfileNewRoute,
  ConvertIndexRoute: ConvertIndexRoute,
  DemoFormSimpleRoute: DemoFormSimpleRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
