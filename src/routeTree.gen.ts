/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as HomeIndexRouteImport } from './routes/home/index'
import { Route as ConvertIndexRouteImport } from './routes/convert/index'
import { Route as BppuConvertIndexRouteImport } from './routes/bppu-convert/index'
import { Route as ProfileNewRouteImport } from './routes/profile/new'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const HomeIndexRoute = HomeIndexRouteImport.update({
  id: '/home/',
  path: '/home/',
  getParentRoute: () => rootRouteImport,
} as any)
const ConvertIndexRoute = ConvertIndexRouteImport.update({
  id: '/convert/',
  path: '/convert/',
  getParentRoute: () => rootRouteImport,
} as any)
const BppuConvertIndexRoute = BppuConvertIndexRouteImport.update({
  id: '/bppu-convert/',
  path: '/bppu-convert/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileNewRoute = ProfileNewRouteImport.update({
  id: '/profile/new',
  path: '/profile/new',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/profile/new': typeof ProfileNewRoute
  '/bppu-convert': typeof BppuConvertIndexRoute
  '/convert': typeof ConvertIndexRoute
  '/home': typeof HomeIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/profile/new': typeof ProfileNewRoute
  '/bppu-convert': typeof BppuConvertIndexRoute
  '/convert': typeof ConvertIndexRoute
  '/home': typeof HomeIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/profile/new': typeof ProfileNewRoute
  '/bppu-convert/': typeof BppuConvertIndexRoute
  '/convert/': typeof ConvertIndexRoute
  '/home/': typeof HomeIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/profile/new' | '/bppu-convert' | '/convert' | '/home'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/profile/new' | '/bppu-convert' | '/convert' | '/home'
  id:
    | '__root__'
    | '/'
    | '/profile/new'
    | '/bppu-convert/'
    | '/convert/'
    | '/home/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProfileNewRoute: typeof ProfileNewRoute
  BppuConvertIndexRoute: typeof BppuConvertIndexRoute
  ConvertIndexRoute: typeof ConvertIndexRoute
  HomeIndexRoute: typeof HomeIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/home/': {
      id: '/home/'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/convert/': {
      id: '/convert/'
      path: '/convert'
      fullPath: '/convert'
      preLoaderRoute: typeof ConvertIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/bppu-convert/': {
      id: '/bppu-convert/'
      path: '/bppu-convert'
      fullPath: '/bppu-convert'
      preLoaderRoute: typeof BppuConvertIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile/new': {
      id: '/profile/new'
      path: '/profile/new'
      fullPath: '/profile/new'
      preLoaderRoute: typeof ProfileNewRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProfileNewRoute: ProfileNewRoute,
  BppuConvertIndexRoute: BppuConvertIndexRoute,
  ConvertIndexRoute: ConvertIndexRoute,
  HomeIndexRoute: HomeIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
